{"version":3,"sources":["webpack:///./src/pages/en/about.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","AboutPage","a","createElement","title","className","to","m","module","exports","require","default","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","langHandler","e","preventDefault","url","globalHistory","split","idx","includes","console","log","target","dataset","Header","currentLang","_855640438","react_default","allUrlsJson","edges","filter","el","node","map","_ref$node","id","path","key","gatsby_browser_entry","activeClassName","data-lang","onClick","siteTitle","Footer","Date","getFullYear","href","Layout","header","footer"],"mappings":"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","file":"component---src-pages-en-about-js-1007a3677f278b74d576.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\n\nconst AboutPage = () => (\n  <Layout>\n    <SEO title=\"Page two\"/>\n    <div className={\"container\"}>\n      <h1>Hi from the AboutPage ENG</h1>\n      <p>Welcome to AboutPage</p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </div>\n  </Layout>\n)\n\nexport default AboutPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { graphql, Link, useStaticQuery, navigate } from \"gatsby\"\nimport { globalHistory } from \"@reach/router\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst langHandler = (e) => {\n  e.preventDefault()\n\n  // change current url\n  let url = globalHistory.location.pathname.split(\"/\")\n  let idx = 1;\n  if (globalHistory.location.pathname.includes(\"northBits\")) {\n    idx = 2;\n  }\n  console.log('url a', url.join(\"/\"));\n  url[idx] = e.target.dataset.lang\n  console.log('url b', url.join(\"/\"));\n}\n  // navigate(url.join(\"/\"))\n\nconst Header = () => {\n  const idx = globalHistory.location.pathname.includes(\"northBits\") ? 2 : 1\n  const currentLang = globalHistory.location.pathname.split(\"/\", 3)[idx]\n  const data = useStaticQuery(graphql`\n    query {\n     allUrlsJson {\n        edges {\n          node {\n            id\n            name\n            path\n            lang\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n  return (\n    <header>\n      <div className={\"container\"}>\n        <nav>\n          <ul className={\"nav-menu\"}>\n            {data.allUrlsJson.edges\n              .filter((el) => el.node.lang === currentLang)\n              .map(({ node: { id, name, path } }) => (\n                <li key={id}>\n                  <Link className={\"nav-menu__item\"}\n                        to={path}\n                        activeClassName=\"active\">{name}</Link>\n                </li>\n              ))}\n          </ul>\n          <ul className={\"nav-menu lang\"}>\n            <li key={\"eng\"}>\n              <a\n                 data-lang={\"en\"}\n                 onClick={e => langHandler(e)}\n                 className={\"nav-menu__item\"}>En</a>\n            </li>\n            <li key={\"heb\"}>\n              <a\n                 data-lang={\"he\"}\n                 onClick={e => langHandler(e)}\n                 className={\"nav-menu__item\"}>He</a>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\n\nconst Footer = () => (\n  <footer className={\"container\"}>\n    {new Date().getFullYear()}, Built with\n    {` `}\n    <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n  </footer>\n)\n\nexport default Footer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport \"../styles/layout.sass\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\n\nconst Layout = ({ children }) => {\n  return [\n    <Header key={\"1\"}/>,\n    <main key={\"2\"}>\n      {children}\n    </main>,\n    <Footer key={\"3\"}/>,\n  ]\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}